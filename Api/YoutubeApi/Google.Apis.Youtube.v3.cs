//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Newtonsoft.Json;

namespace Google.Apis.Youtube.v3.Data
{
	using System;
	using System.Collections;
	using System.Collections.Generic;


	public abstract class BaseYoutubeResponse : Google.Apis.Requests.IDirectResponseSchema
	{
		[Newtonsoft.Json.JsonPropertyAttribute ("etag", NullValueHandling = NullValueHandling.Ignore)]
		public abstract string ETag { get; set; }

		[Newtonsoft.Json.JsonPropertyAttribute ("error", NullValueHandling = NullValueHandling.Ignore)]
		public ResponseError Error {get;set;}
	}

	public class ResponseErrorDescription
	{
		[Newtonsoft.Json.JsonPropertyAttribute ("domain")]
		public string Domain { get; set; }

		[Newtonsoft.Json.JsonPropertyAttribute ("reason")]
		public string Reason { get; set; }

		[Newtonsoft.Json.JsonPropertyAttribute ("message")]
		public string Message { get; set; }

		[Newtonsoft.Json.JsonPropertyAttribute ("locationType")]
		public string LocationType { get; set; }

		[Newtonsoft.Json.JsonPropertyAttribute ("location")]
		public string Location { get; set; }
	}

	public class ResponseError
	{
		[Newtonsoft.Json.JsonPropertyAttribute ("errors", NullValueHandling = NullValueHandling.Ignore)]
		public List<ResponseErrorDescription> Errors { get; set; }

		[Newtonsoft.Json.JsonPropertyAttribute ("code", NullValueHandling = NullValueHandling.Ignore)]
		public int Code { get; set; }

		[Newtonsoft.Json.JsonPropertyAttribute ("message", NullValueHandling = NullValueHandling.Ignore)]
		public string Message { get; set; }
	}
	/// <summary>An activity resource contains information about an action that a channel has taken on YouTube.</summary>
	public class Activity : BaseYoutubeResponse
	{

		private ActivityContentDetails _contentDetails;

		private string _etag;

		private string _id;

		private string _kind;

		private ActivitySnippet _snippet;

		/// <summary>Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("contentDetails")]
		public virtual ActivityContentDetails ContentDetails {
			get {
				return this._contentDetails;
			}
			set {
				this._contentDetails = value;
			}
		}

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}


		/// <summary>The unique ID of the activity.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("id")]
		public virtual string Id {
			get {
				return this._id;
			}
			set {
				this._id = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Basic details about an activity, including title, description, thumbnails, activity type and group.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("snippet")]
		public virtual ActivitySnippet Snippet {
			get {
				return this._snippet;
			}
			set {
				this._snippet = value;
			}
		}
	}

	/// <summary>Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.</summary>
	public class ActivityContentDetails
	{

		private ActivityContentDetails.BulletinData _bulletin;

		private ActivityContentDetails.CommentData _comment;

		private ActivityContentDetails.FavoriteData _favorite;

		private ActivityContentDetails.LikeData _like;

		private ActivityContentDetails.PlaylistItemData _playlistItem;

		private ActivityContentDetails.RecommendationData _recommendation;

		private ActivityContentDetails.SocialData _social;

		private ActivityContentDetails.SubscriptionData _subscription;

		private ActivityContentDetails.UploadData _upload;

		/// <summary>Only present if the type is &quot;bulletin&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("bulletin")]
		public virtual ActivityContentDetails.BulletinData Bulletin {
			get {
				return this._bulletin;
			}
			set {
				this._bulletin = value;
			}
		}

		/// <summary>Only present if the type is &quot;comment&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("comment")]
		public virtual ActivityContentDetails.CommentData Comment {
			get {
				return this._comment;
			}
			set {
				this._comment = value;
			}
		}

		/// <summary>Only present if the type is &quot;favorite&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("favorite")]
		public virtual ActivityContentDetails.FavoriteData Favorite {
			get {
				return this._favorite;
			}
			set {
				this._favorite = value;
			}
		}

		/// <summary>Only present if the type is &quot;like&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("like")]
		public virtual ActivityContentDetails.LikeData Like {
			get {
				return this._like;
			}
			set {
				this._like = value;
			}
		}

		/// <summary>Only present if the type is &quot;playlistItem&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("playlistItem")]
		public virtual ActivityContentDetails.PlaylistItemData PlaylistItem {
			get {
				return this._playlistItem;
			}
			set {
				this._playlistItem = value;
			}
		}

		/// <summary>Only set if the type is &quot;recommendation&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("recommendation")]
		public virtual ActivityContentDetails.RecommendationData Recommendation {
			get {
				return this._recommendation;
			}
			set {
				this._recommendation = value;
			}
		}

		/// <summary>Only present if the type is &quot;social&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("social")]
		public virtual ActivityContentDetails.SocialData Social {
			get {
				return this._social;
			}
			set {
				this._social = value;
			}
		}

		/// <summary>Only present if the type is &quot;subscription&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("subscription")]
		public virtual ActivityContentDetails.SubscriptionData Subscription {
			get {
				return this._subscription;
			}
			set {
				this._subscription = value;
			}
		}

		/// <summary>Only present if the type is &quot;upload&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("upload")]
		public virtual ActivityContentDetails.UploadData Upload {
			get {
				return this._upload;
			}
			set {
				this._upload = value;
			}
		}

		/// <summary>Only present if the type is &quot;bulletin&quot;.</summary>
		public class BulletinData
		{

			private ResourceId _resourceId;

			/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("resourceId")]
			public virtual ResourceId ResourceId {
				get {
					return this._resourceId;
				}
				set {
					this._resourceId = value;
				}
			}
		}

		/// <summary>Only present if the type is &quot;comment&quot;.</summary>
		public class CommentData
		{

			private ResourceId _resourceId;

			/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("resourceId")]
			public virtual ResourceId ResourceId {
				get {
					return this._resourceId;
				}
				set {
					this._resourceId = value;
				}
			}
		}

		/// <summary>Only present if the type is &quot;favorite&quot;.</summary>
		public class FavoriteData
		{

			private ResourceId _resourceId;

			/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("resourceId")]
			public virtual ResourceId ResourceId {
				get {
					return this._resourceId;
				}
				set {
					this._resourceId = value;
				}
			}
		}

		/// <summary>Only present if the type is &quot;like&quot;.</summary>
		public class LikeData
		{

			private ResourceId _resourceId;

			/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("resourceId")]
			public virtual ResourceId ResourceId {
				get {
					return this._resourceId;
				}
				set {
					this._resourceId = value;
				}
			}
		}

		/// <summary>Only present if the type is &quot;playlistItem&quot;.</summary>
		public class PlaylistItemData
		{

			private string _playlistId;

			private ResourceId _resourceId;

			/// <summary>ID of the playlist the resource was added to.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("playlistId")]
			public virtual string PlaylistId {
				get {
					return this._playlistId;
				}
				set {
					this._playlistId = value;
				}
			}

			/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("resourceId")]
			public virtual ResourceId ResourceId {
				get {
					return this._resourceId;
				}
				set {
					this._resourceId = value;
				}
			}
		}

		/// <summary>Only set if the type is &quot;recommendation&quot;.</summary>
		public class RecommendationData
		{

			private string _reason;

			private ResourceId _resourceId;

			private ResourceId _seedResourceId;

			/// <summary>Reason for which the video was recommended.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("reason")]
			public virtual string Reason {
				get {
					return this._reason;
				}
				set {
					this._reason = value;
				}
			}

			/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("resourceId")]
			public virtual ResourceId ResourceId {
				get {
					return this._resourceId;
				}
				set {
					this._resourceId = value;
				}
			}

			/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("seedResourceId")]
			public virtual ResourceId SeedResourceId {
				get {
					return this._seedResourceId;
				}
				set {
					this._seedResourceId = value;
				}
			}
		}

		/// <summary>Only present if the type is &quot;social&quot;.</summary>
		public class SocialData
		{

			private string _author;

			private string _imageUrl;

			private string _referenceUrl;

			private ResourceId _resourceId;

			private string _type;

			/// <summary>Author of the post.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("author")]
			public virtual string Author {
				get {
					return this._author;
				}
				set {
					this._author = value;
				}
			}

			/// <summary>Image of the post author.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("imageUrl")]
			public virtual string ImageUrl {
				get {
					return this._imageUrl;
				}
				set {
					this._imageUrl = value;
				}
			}

			/// <summary>Url of the social post.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("referenceUrl")]
			public virtual string ReferenceUrl {
				get {
					return this._referenceUrl;
				}
				set {
					this._referenceUrl = value;
				}
			}

			/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("resourceId")]
			public virtual ResourceId ResourceId {
				get {
					return this._resourceId;
				}
				set {
					this._resourceId = value;
				}
			}

			/// <summary>Type of the social network.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("type")]
			public virtual string Type {
				get {
					return this._type;
				}
				set {
					this._type = value;
				}
			}
		}

		/// <summary>Only present if the type is &quot;subscription&quot;.</summary>
		public class SubscriptionData
		{

			private ResourceId _resourceId;

			/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("resourceId")]
			public virtual ResourceId ResourceId {
				get {
					return this._resourceId;
				}
				set {
					this._resourceId = value;
				}
			}
		}

		/// <summary>Only present if the type is &quot;upload&quot;.</summary>
		public class UploadData
		{

			private string _videoId;

			/// <summary>ID of the uploaded video.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("videoId")]
			public virtual string VideoId {
				get {
					return this._videoId;
				}
				set {
					this._videoId = value;
				}
			}
		}
	}

	/// <summary>A paginated list of activities returned as a response to youtube.activities.list calls.</summary>
	public class ActivityListResponse : BaseYoutubeResponse
	{

		private string _etag;

		private System.Collections.Generic.IList<Activity> _items;

		private string _kind;

		private string _nextPageToken;

		private PageInfo _pageInfo;

		private string _prevPageToken;

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>List of activities matching the request criteria.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("items")]
		public virtual System.Collections.Generic.IList<Activity> Items {
			get {
				return this._items;
			}
			set {
				this._items = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Token to the next page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("nextPageToken")]
		public virtual string NextPageToken {
			get {
				return this._nextPageToken;
			}
			set {
				this._nextPageToken = value;
			}
		}

		/// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("pageInfo")]
		public virtual PageInfo PageInfo {
			get {
				return this._pageInfo;
			}
			set {
				this._pageInfo = value;
			}
		}

		/// <summary>Token to the previous page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("prevPageToken")]
		public virtual string PrevPageToken {
			get {
				return this._prevPageToken;
			}
			set {
				this._prevPageToken = value;
			}
		}
	}

	/// <summary>Basic details about an activity, including title, description, thumbnails, activity type and group.</summary>
	public class ActivitySnippet
	{

		private string _channelId;

		private string _description;

		private string _groupId;

		private string _publishedAt;

		private ActivitySnippet.ThumbnailsData _thumbnails;

		private string _title;

		private string _type;

		/// <summary>Channel publishing the activity.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId")]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>Description of the activity.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("description")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				this._description = value;
			}
		}

		/// <summary>Id of the group that this activity is part of.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("groupId")]
		public virtual string GroupId {
			get {
				return this._groupId;
			}
			set {
				this._groupId = value;
			}
		}

		/// <summary>Date and time the activity was published at.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("publishedAt")]
		public virtual string PublishedAt {
			get {
				return this._publishedAt;
			}
			set {
				this._publishedAt = value;
			}
		}

		/// <summary>Activity thumbnails.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("thumbnails")]
		public virtual ActivitySnippet.ThumbnailsData Thumbnails {
			get {
				return this._thumbnails;
			}
			set {
				this._thumbnails = value;
			}
		}

		/// <summary>Title of the activity.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("title")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				this._title = value;
			}
		}

		/// <summary>Type of the activity.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("type")]
		public virtual string Type {
			get {
				return this._type;
			}
			set {
				this._type = value;
			}
		}

		/// <summary>Activity thumbnails.</summary>
		public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail>
		{
		}
	}

	/// <summary>A channel resource contains information about a single YouTube channel.</summary>
	public class Channel : BaseYoutubeResponse
	{

		private ChannelContentDetails _contentDetails;

		private string _etag;

		private string _id;

		private string _kind;

		private ChannelSnippet _snippet;

		private ChannelStatistics _statistics;

		private ChannelTopicDetails _topicDetails;

		/// <summary>Details about the content of a channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("contentDetails")]
		public virtual ChannelContentDetails ContentDetails {
			get {
				return this._contentDetails;
			}
			set {
				this._contentDetails = value;
			}
		}

		/// <summary>The eTag of the channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>The unique ID of the channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("id")]
		public virtual string Id {
			get {
				return this._id;
			}
			set {
				this._id = value;
			}
		}

		/// <summary>The type of this API resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Basic details about a channel, including title, description and thumbnails.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("snippet")]
		public virtual ChannelSnippet Snippet {
			get {
				return this._snippet;
			}
			set {
				this._snippet = value;
			}
		}

		/// <summary>Statistics about a channel: number of subscribers, number of videos in the channel, etc.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("statistics")]
		public virtual ChannelStatistics Statistics {
			get {
				return this._statistics;
			}
			set {
				this._statistics = value;
			}
		}

		/// <summary>Freebase topic information related to the channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("topicDetails")]
		public virtual ChannelTopicDetails TopicDetails {
			get {
				return this._topicDetails;
			}
			set {
				this._topicDetails = value;
			}
		}
	}

	/// <summary>Details about the content of a channel.</summary>
	public class ChannelContentDetails
	{

		private string _privacyStatus;

		private string _uploads;

		/// <summary>Privacy status of the channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("privacyStatus")]
		public virtual string PrivacyStatus {
			get {
				return this._privacyStatus;
			}
			set {
				this._privacyStatus = value;
			}
		}

		/// <summary>The ID of the playlist containing the uploads of this channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("uploads")]
		public virtual string Uploads {
			get {
				return this._uploads;
			}
			set {
				this._uploads = value;
			}
		}
	}

	/// <summary>A paginated list of channels returned as the response to a youtube.channels.list call.</summary>
	public class ChannelListResponse : BaseYoutubeResponse
	{

		private string _etag;

		private System.Collections.Generic.IList<Channel> _items;

		private string _kind;

		private string _nextPageToken;

		private PageInfo _pageInfo;

		private string _prevPageToken;

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>List of channels matching the request criteria.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("items")]
		public virtual System.Collections.Generic.IList<Channel> Items {
			get {
				return this._items;
			}
			set {
				this._items = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Token to the next page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("nextPageToken")]
		public virtual string NextPageToken {
			get {
				return this._nextPageToken;
			}
			set {
				this._nextPageToken = value;
			}
		}

		/// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("pageInfo")]
		public virtual PageInfo PageInfo {
			get {
				return this._pageInfo;
			}
			set {
				this._pageInfo = value;
			}
		}

		/// <summary>Token to the previous page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("prevPageToken")]
		public virtual string PrevPageToken {
			get {
				return this._prevPageToken;
			}
			set {
				this._prevPageToken = value;
			}
		}
	}

	/// <summary>Basic details about a channel, including title, description and thumbnails.</summary>
	public class ChannelSnippet
	{

		private string _channelId;

		private string _description;

		private string _publishedAt;

		private ChannelSnippet.ThumbnailsData _thumbnails;

		private string _title;

		/// <summary>Id of the channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId")]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>Description of the channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("description")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				this._description = value;
			}
		}

		/// <summary>Date and time the channel was published at.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("publishedAt")]
		public virtual string PublishedAt {
			get {
				return this._publishedAt;
			}
			set {
				this._publishedAt = value;
			}
		}

		/// <summary>Channel thumbnails.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("thumbnails")]
		public virtual ChannelSnippet.ThumbnailsData Thumbnails {
			get {
				return this._thumbnails;
			}
			set {
				this._thumbnails = value;
			}
		}

		/// <summary>Title of the channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("title")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				this._title = value;
			}
		}

		/// <summary>Channel thumbnails.</summary>
		public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail>
		{
		}
	}

	/// <summary>Statistics about a channel: number of subscribers, number of videos in the channel, etc.</summary>
	public class ChannelStatistics
	{

		private string _commentCount;

		private string _subscriberCount;

		private string _videoCount;

		private string _viewCount;

		/// <summary>Number of comments for this channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("commentCount")]
		public virtual string CommentCount {
			get {
				return this._commentCount;
			}
			set {
				this._commentCount = value;
			}
		}

		/// <summary>Number of subscribers to this channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("subscriberCount")]
		public virtual string SubscriberCount {
			get {
				return this._subscriberCount;
			}
			set {
				this._subscriberCount = value;
			}
		}

		/// <summary>Number of videos in the channel.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("videoCount")]
		public virtual string VideoCount {
			get {
				return this._videoCount;
			}
			set {
				this._videoCount = value;
			}
		}

		/// <summary>Number of times the channel has been viewed.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("viewCount")]
		public virtual string ViewCount {
			get {
				return this._viewCount;
			}
			set {
				this._viewCount = value;
			}
		}
	}

	/// <summary>Freebase topic information related to the channel.</summary>
	public class ChannelTopicDetails
	{

		private System.Collections.Generic.IList<string> _topicIds;

		/// <summary>List of topic ids for this channel *</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("topicIds")]
		public virtual System.Collections.Generic.IList<string> TopicIds {
			get {
				return this._topicIds;
			}
			set {
				this._topicIds = value;
			}
		}
	}

	/// <summary>A guideCategory resource identifies a category that YouTube assigns based on a channel&apos;s content or other indicators, such as the channel&apos;s popularity.</summary>
	public class GuideCategory : BaseYoutubeResponse
	{

		private string _etag;

		private string _id;

		private string _kind;

		private GuideCategorySnippet _snippet;

		/// <summary>The eTag of the guide category.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>The unique ID of the guide category.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("id")]
		public virtual string Id {
			get {
				return this._id;
			}
			set {
				this._id = value;
			}
		}

		/// <summary>The type of this API resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Basic details about a guide category.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("snippet")]
		public virtual GuideCategorySnippet Snippet {
			get {
				return this._snippet;
			}
			set {
				this._snippet = value;
			}
		}
	}

	/// <summary>A paginated list of guide categories returned as the response to a youtube.guideCategories.list call.</summary>
	public class GuideCategoryListResponse : BaseYoutubeResponse
	{

		private string _etag;

		private System.Collections.Generic.IList<GuideCategory> _items;

		private string _kind;

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>List of categories matching the request criteria.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("items")]
		public virtual System.Collections.Generic.IList<GuideCategory> Items {
			get {
				return this._items;
			}
			set {
				this._items = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}
	}

	/// <summary>Basic details about a guide category.</summary>
	public class GuideCategorySnippet
	{

		private string _channelId;

		private string _title;

		/// <summary>Channel publishing the guide category.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId")]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>Title of the guide category.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("title")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				this._title = value;
			}
		}
	}

	/// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
	public class PageInfo
	{

		private System.Nullable<long> _resultsPerPage;

		private System.Nullable<long> _totalResults;

		/// <summary>The number of results to display for each page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("resultsPerPage")]
		public virtual System.Nullable<long> ResultsPerPage {
			get {
				return this._resultsPerPage;
			}
			set {
				this._resultsPerPage = value;
			}
		}

		/// <summary>The total number of results.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("totalResults")]
		public virtual System.Nullable<long> TotalResults {
			get {
				return this._totalResults;
			}
			set {
				this._totalResults = value;
			}
		}
	}

	/// <summary>A playlist resource represents a single YouTube playlist.</summary>
	public class Playlist : BaseYoutubeResponse
	{

		private string _etag;

		private string _id;

		private string _kind;

		private PlaylistSnippet _snippet;

		private PlaylistStatus _status;

		/// <summary>The eTag of the playlist.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>The unique id of the playlist.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("id")]
		public virtual string Id {
			get {
				return this._id;
			}
			set {
				this._id = value;
			}
		}

		/// <summary>The type of this API resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Basic details about a playlist, including title, description and thumbnails.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("snippet")]
		public virtual PlaylistSnippet Snippet {
			get {
				return this._snippet;
			}
			set {
				this._snippet = value;
			}
		}

		/// <summary>The status details of a playlist describes whether the playlist is private.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("status")]
		public virtual PlaylistStatus Status {
			get {
				return this._status;
			}
			set {
				this._status = value;
			}
		}
	}

	/// <summary>A playlistItem resource refers to another resource, such as a video, that is included in a playlist.</summary>
	public class PlaylistItem : BaseYoutubeResponse
	{

		private PlaylistItemContentDetails _contentDetails;

		private string _etag;

		private string _id;

		private string _kind;

		private PlaylistItemSnippet _snippet;

		/// <summary>Details about the content of a playlist item, such as the video or the video fragment start and end time included in the playlist.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("contentDetails", NullValueHandling = NullValueHandling.Ignore)]
		public virtual PlaylistItemContentDetails ContentDetails {
			get {
				return this._contentDetails;
			}
			set {
				this._contentDetails = value;
			}
		}

		/// <summary>The eTag of the playlist item.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag", NullValueHandling = NullValueHandling.Ignore)]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>The unique id of the playlist item.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("id", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string Id {
			get {
				return this._id;
			}
			set {
				this._id = value;
			}
		}

		/// <summary>The type of this API resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Basic details about an item included in a playlist, including title, description, thumbnails, playlist the item is part of and position of the item inside the playlist.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("snippet", NullValueHandling = NullValueHandling.Ignore)]
		public virtual PlaylistItemSnippet Snippet {
			get {
				return this._snippet;
			}
			set {
				this._snippet = value;
			}
		}
	}

	/// <summary>Details about the content of a playlist item, such as the video or the video fragment start and end time included in the playlist.</summary>
	public class PlaylistItemContentDetails
	{

		private string _endAt;

		private string _note;

		private string _startAt;

		private string _videoId;

		/// <summary>The time video playback ends.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("endAt")]
		public virtual string EndAt {
			get {
				return this._endAt;
			}
			set {
				this._endAt = value;
			}
		}

		/// <summary>The user-generated note for this item.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("note")]
		public virtual string Note {
			get {
				return this._note;
			}
			set {
				this._note = value;
			}
		}

		/// <summary>The time video playback begins.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("startAt")]
		public virtual string StartAt {
			get {
				return this._startAt;
			}
			set {
				this._startAt = value;
			}
		}

		/// <summary>ID of the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("videoId")]
		public virtual string VideoId {
			get {
				return this._videoId;
			}
			set {
				this._videoId = value;
			}
		}
	}

	/// <summary>A paginated list of playlist items returned as the response to a youtube.playlistItems.list call.</summary>
	public class PlaylistItemListResponse : BaseYoutubeResponse
	{

		private string _etag;

		private System.Collections.Generic.IList<PlaylistItem> _items;

		private string _kind;

		private string _nextPageToken;

		private PageInfo _pageInfo;

		private string _prevPageToken;

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>List of playlist items matching the request criteria.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("items")]
		public virtual System.Collections.Generic.IList<PlaylistItem> Items {
			get {
				return this._items;
			}
			set {
				this._items = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Token to the next page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("nextPageToken")]
		public virtual string NextPageToken {
			get {
				return this._nextPageToken;
			}
			set {
				this._nextPageToken = value;
			}
		}

		/// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("pageInfo")]
		public virtual PageInfo PageInfo {
			get {
				return this._pageInfo;
			}
			set {
				this._pageInfo = value;
			}
		}

		/// <summary>Token to the previous page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("prevPageToken")]
		public virtual string PrevPageToken {
			get {
				return this._prevPageToken;
			}
			set {
				this._prevPageToken = value;
			}
		}
	}

	/// <summary>Basic details about an item included in a playlist, including title, description, thumbnails, playlist the item is part of and position of the item inside the playlist.</summary>
	public class PlaylistItemSnippet
	{

		private string _channelId;

		private string _description;

		private string _playlistId;

		private System.Nullable<long> _position;

		private string _publishedAt;

		private ResourceId _resourceId;

		private PlaylistItemSnippet.ThumbnailsData _thumbnails;

		private string _title;

		/// <summary>Channel publishing the playlist item.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>Description of the playlist item.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("description", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				this._description = value;
			}
		}

		/// <summary>The playlist the item is part of.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("playlistId", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string PlaylistId {
			get {
				return this._playlistId;
			}
			set {
				this._playlistId = value;
			}
		}

		/// <summary>The position of the item within the playlist.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("position", NullValueHandling = NullValueHandling.Ignore)]
		public virtual System.Nullable<long> Position {
			get {
				return this._position;
			}
			set {
				this._position = value;
			}
		}

		/// <summary>Date and time the playlist item was published at.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("publishedAt", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string PublishedAt {
			get {
				return this._publishedAt;
			}
			set {
				this._publishedAt = value;
			}
		}

		/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("resourceId", NullValueHandling = NullValueHandling.Ignore)]
		public virtual ResourceId ResourceId {
			get {
				return this._resourceId;
			}
			set {
				this._resourceId = value;
			}
		}

		/// <summary>Playlist item thumbnails.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("thumbnails", NullValueHandling = NullValueHandling.Ignore)]
		public virtual PlaylistItemSnippet.ThumbnailsData Thumbnails {
			get {
				return this._thumbnails;
			}
			set {
				this._thumbnails = value;
			}
		}

		/// <summary>Title of the playlist item.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("title", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				this._title = value;
			}
		}

		/// <summary>Playlist item thumbnails.</summary>
		public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail>
		{
		}
	}

	/// <summary>A paginated list of playlists returned as the response to a youtube.playlists.list call.</summary>
	public class PlaylistListResponse : BaseYoutubeResponse
	{

		private string _etag;

		private System.Collections.Generic.IList<Playlist> _items;

		private string _kind;

		private string _nextPageToken;

		private PageInfo _pageInfo;

		private string _prevPageToken;

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>List of playlists matching the request criteria.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("items")]
		public virtual System.Collections.Generic.IList<Playlist> Items {
			get {
				return this._items;
			}
			set {
				this._items = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Token to the next page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("nextPageToken")]
		public virtual string NextPageToken {
			get {
				return this._nextPageToken;
			}
			set {
				this._nextPageToken = value;
			}
		}

		/// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("pageInfo")]
		public virtual PageInfo PageInfo {
			get {
				return this._pageInfo;
			}
			set {
				this._pageInfo = value;
			}
		}

		/// <summary>Token to the previous page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("prevPageToken")]
		public virtual string PrevPageToken {
			get {
				return this._prevPageToken;
			}
			set {
				this._prevPageToken = value;
			}
		}
	}

	/// <summary>Basic details about a playlist, including title, description and thumbnails.</summary>
	public class PlaylistSnippet
	{

		private string _channelId;

		private string _description;

		private string _publishedAt;

		private PlaylistSnippet.ThumbnailsData _thumbnails;

		private string _title;

		/// <summary>Channel publishing the playlist.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId")]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>Description of the playlist.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("description")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				this._description = value;
			}
		}

		/// <summary>Date and time the playlist was published at.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("publishedAt")]
		public virtual string PublishedAt {
			get {
				return this._publishedAt;
			}
			set {
				this._publishedAt = value;
			}
		}

		/// <summary>Playlist thumbnails.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("thumbnails")]
		public virtual PlaylistSnippet.ThumbnailsData Thumbnails {
			get {
				return this._thumbnails;
			}
			set {
				this._thumbnails = value;
			}
		}

		/// <summary>Title of the playlist.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("title")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				this._title = value;
			}
		}

		/// <summary>Playlist thumbnails.</summary>
		public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail>
		{
		}
	}

	/// <summary>The status details of a playlist describes whether the playlist is private.</summary>
	public class PlaylistStatus
	{

		private string _privacyStatus;

		/// <summary>Privacy of the playlist.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("privacyStatus")]
		public virtual string PrivacyStatus {
			get {
				return this._privacyStatus;
			}
			set {
				this._privacyStatus = value;
			}
		}
	}

	/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
	public class ResourceId
	{

		private string _channelId;

		private string _kind;

		private string _playlistId;

		private string _videoId;

		/// <summary>ID of the referred channel. Present only when type is &quot;CHANNEL&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>The kind of the referred resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>ID of the referred playlist. Present only when type is &quot;PLAYLIST&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("playlistId", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string PlaylistId {
			get {
				return this._playlistId;
			}
			set {
				this._playlistId = value;
			}
		}

		/// <summary>ID of the referred video. Present only when type is &quot;VIDEO&quot;.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("videoId", NullValueHandling = NullValueHandling.Ignore)]
		public virtual string VideoId {
			get {
				return this._videoId;
			}
			set {
				this._videoId = value;
			}
		}
	}

	/// <summary>A paginated list of search results returned as the response to a youtube.search.list call.</summary>
	public class SearchListResponse : BaseYoutubeResponse
	{

		private string _etag;

		private System.Collections.Generic.IList<SearchResult> _items;

		private string _kind;

		private string _nextPageToken;

		private PageInfo _pageInfo;

		private string _prevPageToken;

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>List of results matching the request criteria.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("items")]
		public virtual System.Collections.Generic.IList<SearchResult> Items {
			get {
				return this._items;
			}
			set {
				this._items = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Token to the next page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("nextPageToken")]
		public virtual string NextPageToken {
			get {
				return this._nextPageToken;
			}
			set {
				this._nextPageToken = value;
			}
		}

		/// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("pageInfo")]
		public virtual PageInfo PageInfo {
			get {
				return this._pageInfo;
			}
			set {
				this._pageInfo = value;
			}
		}

		/// <summary>Token to the previous page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("prevPageToken")]
		public virtual string PrevPageToken {
			get {
				return this._prevPageToken;
			}
			set {
				this._prevPageToken = value;
			}
		}
	}

	/// <summary>A search result contains information about a YouTube video, channel, or playlist that matches the search parameters specified in an API request.</summary>
	public class SearchResult : BaseYoutubeResponse
	{

		private string _etag;

		private ResourceId _id;

		private string _kind;

		private SearchResultSnippet _snippet;

		/// <summary>The eTag of the search result.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("id")]
		public virtual ResourceId Id {
			get {
				return this._id;
			}
			set {
				this._id = value;
			}
		}

		/// <summary>The type of this API resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("snippet")]
		public virtual SearchResultSnippet Snippet {
			get {
				return this._snippet;
			}
			set {
				this._snippet = value;
			}
		}
	}

	/// <summary>Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.</summary>
	public class SearchResultSnippet
	{

		private string _channelId;

		private string _description;

		private string _publishedAt;

		private SearchResultSnippet.ThumbnailsData _thumbnails;

		private string _title;

		/// <summary>Channel publishing the found resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId")]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>Description of the found resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("description")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				this._description = value;
			}
		}

		/// <summary>Date and time the found resource was published at.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("publishedAt")]
		public virtual string PublishedAt {
			get {
				return this._publishedAt;
			}
			set {
				this._publishedAt = value;
			}
		}

		/// <summary>Thumbnails for the found resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("thumbnails")]
		public virtual SearchResultSnippet.ThumbnailsData Thumbnails {
			get {
				return this._thumbnails;
			}
			set {
				this._thumbnails = value;
			}
		}

		/// <summary>Title of the found resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("title")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				this._title = value;
			}
		}

		/// <summary>Thumbnails for the found resource.</summary>
		public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail>
		{
		}
	}

	/// <summary>A subscription resource contains information about a YouTube user subscription.</summary>
	public class Subscription : BaseYoutubeResponse
	{

		private SubscriptionContentDetails _contentDetails;

		private string _etag;

		private string _id;

		private string _kind;

		private SubscriptionSnippet _snippet;

		/// <summary>Details about the content to witch a subscription refers.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("contentDetails")]
		public virtual SubscriptionContentDetails ContentDetails {
			get {
				return this._contentDetails;
			}
			set {
				this._contentDetails = value;
			}
		}

		/// <summary>The eTag of the subscription.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>The unique id of the subscription.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("id")]
		public virtual string Id {
			get {
				return this._id;
			}
			set {
				this._id = value;
			}
		}

		/// <summary>The type of this API resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Basic details about a subscription, including title, description and thumbnails of the subscribed item.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("snippet")]
		public virtual SubscriptionSnippet Snippet {
			get {
				return this._snippet;
			}
			set {
				this._snippet = value;
			}
		}
	}

	/// <summary>Details about the content to witch a subscription refers.</summary>
	public class SubscriptionContentDetails
	{

		private System.Nullable<long> _newItemCount;

		private System.Nullable<long> _totalItemCount;

		/// <summary>Number of new items in the subscription since its content was last read.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("newItemCount")]
		public virtual System.Nullable<long> NewItemCount {
			get {
				return this._newItemCount;
			}
			set {
				this._newItemCount = value;
			}
		}

		/// <summary>Approximate total number of items the subscription points to.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("totalItemCount")]
		public virtual System.Nullable<long> TotalItemCount {
			get {
				return this._totalItemCount;
			}
			set {
				this._totalItemCount = value;
			}
		}
	}

	/// <summary>A paginated list of subscriptions returned as the response to a youtube.subscriptions.list call.</summary>
	public class SubscriptionListResponse : BaseYoutubeResponse
	{

		private string _etag;

		private System.Collections.Generic.IList<Subscription> _items;

		private string _kind;

		private string _nextPageToken;

		private PageInfo _pageInfo;

		private string _prevPageToken;

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>List of subscriptions matching the request criteria.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("items")]
		public virtual System.Collections.Generic.IList<Subscription> Items {
			get {
				return this._items;
			}
			set {
				this._items = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Token to the next page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("nextPageToken")]
		public virtual string NextPageToken {
			get {
				return this._nextPageToken;
			}
			set {
				this._nextPageToken = value;
			}
		}

		/// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("pageInfo")]
		public virtual PageInfo PageInfo {
			get {
				return this._pageInfo;
			}
			set {
				this._pageInfo = value;
			}
		}

		/// <summary>Token to the previous page.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("prevPageToken")]
		public virtual string PrevPageToken {
			get {
				return this._prevPageToken;
			}
			set {
				this._prevPageToken = value;
			}
		}
	}

	/// <summary>Basic details about a subscription, including title, description and thumbnails of the subscribed item.</summary>
	public class SubscriptionSnippet
	{

		private string _channelId;

		private string _description;

		private string _publishedAt;

		private ResourceId _resourceId;

		private SubscriptionSnippet.ThumbnailsData _thumbnails;

		private string _title;

		/// <summary>Channel publishing the subscription.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId")]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>Description of the subscription.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("description")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				this._description = value;
			}
		}

		/// <summary>Date and time the subscription was published at.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("publishedAt")]
		public virtual string PublishedAt {
			get {
				return this._publishedAt;
			}
			set {
				this._publishedAt = value;
			}
		}

		/// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("resourceId")]
		public virtual ResourceId ResourceId {
			get {
				return this._resourceId;
			}
			set {
				this._resourceId = value;
			}
		}

		/// <summary>Subscription thumbnails.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("thumbnails")]
		public virtual SubscriptionSnippet.ThumbnailsData Thumbnails {
			get {
				return this._thumbnails;
			}
			set {
				this._thumbnails = value;
			}
		}

		/// <summary>Title of the subscription.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("title")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				this._title = value;
			}
		}

		/// <summary>Subscription thumbnails.</summary>
		public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail>
		{
		}
	}

	/// <summary>A thumbnail is an image representing a YouTube resource.</summary>
	public class Thumbnail
	{

		private string _url;

		/// <summary>The URL for the thumbnail.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("url")]
		public virtual string Url {
			get {
				return this._url;
			}
			set {
				this._url = value;
			}
		}
	}

	/// <summary>A video resource represents a single YouTube video.</summary>
	public class Video : BaseYoutubeResponse
	{

		private VideoContentDetails _contentDetails;

		private string _etag;

		private string _id;

		private string _kind;

		private VideoPlayer _player;

		private VideoSnippet _snippet;

		private VideoStatistics _statistics;

		private VideoStatus _status;

		private VideoTopicDetails _topicDetails;

		/// <summary>Details about the media content of a YouTube video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("contentDetails")]
		public virtual VideoContentDetails ContentDetails {
			get {
				return this._contentDetails;
			}
			set {
				this._contentDetails = value;
			}
		}

		/// <summary>The eTag of the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>The unique id of the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("id")]
		public virtual string Id {
			get {
				return this._id;
			}
			set {
				this._id = value;
			}
		}

		/// <summary>The type of this API resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Player to be used for a video playback.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("player")]
		public virtual VideoPlayer Player {
			get {
				return this._player;
			}
			set {
				this._player = value;
			}
		}

		/// <summary>Basic details about a video, including title, description, uploader, thumbnails and category.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("snippet")]
		public virtual VideoSnippet Snippet {
			get {
				return this._snippet;
			}
			set {
				this._snippet = value;
			}
		}

		/// <summary>Statistics about the video, such as the number of times the video was viewed or liked.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("statistics")]
		public virtual VideoStatistics Statistics {
			get {
				return this._statistics;
			}
			set {
				this._statistics = value;
			}
		}

		/// <summary>The status of a video details the video&apos;s upload status and privacy status.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("status")]
		public virtual VideoStatus Status {
			get {
				return this._status;
			}
			set {
				this._status = value;
			}
		}

		/// <summary>Freebase topic information related to the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("topicDetails")]
		public virtual VideoTopicDetails TopicDetails {
			get {
				return this._topicDetails;
			}
			set {
				this._topicDetails = value;
			}
		}
	}

	/// <summary>A videoCategory resource identifies a category that has been or could be associated with uploaded videos.</summary>
	public class VideoCategory : BaseYoutubeResponse
	{

		private string _etag;

		private string _id;

		private string _kind;

		private VideoCategorySnippet _snippet;

		/// <summary>The eTag of the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>The unique id of the video category.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("id")]
		public virtual string Id {
			get {
				return this._id;
			}
			set {
				this._id = value;
			}
		}

		/// <summary>The type of this API resource.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}

		/// <summary>Basic details about a video category, such as its localized title.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("snippet")]
		public virtual VideoCategorySnippet Snippet {
			get {
				return this._snippet;
			}
			set {
				this._snippet = value;
			}
		}
	}

	/// <summary>A paginated list of video categories returned as the response to a youtube.videoCategory.list call.</summary>
	public class VideoCategoryListResponse : BaseYoutubeResponse
	{

		private string _etag;

		private System.Collections.Generic.IList<VideoCategory> _items;

		private string _kind;

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>List of video categories matching the request criteria.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("items")]
		public virtual System.Collections.Generic.IList<VideoCategory> Items {
			get {
				return this._items;
			}
			set {
				this._items = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}
	}

	/// <summary>Basic details about a video category, such as its localized title.</summary>
	public class VideoCategorySnippet
	{

		private string _channelId;

		private string _title;

		/// <summary>Channel publishing the video category.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId")]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>Title of the video category.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("title")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				this._title = value;
			}
		}
	}

	/// <summary>Details about the media content of a YouTube video.</summary>
	public class VideoContentDetails
	{

		private string _duration;

		private VideoContentDetails.RegionRestrictionData _regionRestriction;

		/// <summary>Duration of the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("duration")]
		public virtual string Duration {
			get {
				return this._duration;
			}
			set {
				this._duration = value;
			}
		}

		/// <summary>Region restriction of the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("regionRestriction")]
		public virtual VideoContentDetails.RegionRestrictionData RegionRestriction {
			get {
				return this._regionRestriction;
			}
			set {
				this._regionRestriction = value;
			}
		}

		/// <summary>Region restriction of the video.</summary>
		public class RegionRestrictionData
		{

			private System.Collections.Generic.IList<string> _allowed;

			private System.Collections.Generic.IList<string> _blocked;

			/// <summary>List of allowed region codes.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("allowed")]
			public virtual System.Collections.Generic.IList<string> Allowed {
				get {
					return this._allowed;
				}
				set {
					this._allowed = value;
				}
			}

			/// <summary>List of blocked region codes.</summary>
			[Newtonsoft.Json.JsonPropertyAttribute ("blocked")]
			public virtual System.Collections.Generic.IList<string> Blocked {
				get {
					return this._blocked;
				}
				set {
					this._blocked = value;
				}
			}
		}
	}

	/// <summary>A paginated list of videos returned as the response to a youtube.videos.list call.</summary>
	public class VideoListResponse : BaseYoutubeResponse
	{

		private string _etag;

		private System.Collections.Generic.IList<Video> _items;

		private string _kind;

		/// <summary>The eTag of the response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("etag")]
		public override string ETag {
			get {
				return this._etag;
			}
			set {
				this._etag = value;
			}
		}

		/// <summary>List of videos matching the request criteria.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("items")]
		public virtual System.Collections.Generic.IList<Video> Items {
			get {
				return this._items;
			}
			set {
				this._items = value;
			}
		}

		/// <summary>The type of this API response.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("kind")]
		public virtual string Kind {
			get {
				return this._kind;
			}
			set {
				this._kind = value;
			}
		}
	}

	/// <summary>Player to be used for a video playback.</summary>
	public class VideoPlayer
	{

		private string _embedHtml;

		/// <summary>Iframe embed for the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("embedHtml")]
		public virtual string EmbedHtml {
			get {
				return this._embedHtml;
			}
			set {
				this._embedHtml = value;
			}
		}
	}

	/// <summary>Basic details about a video, including title, description, uploader, thumbnails and category.</summary>
	public class VideoSnippet
	{

		private string _categoryId;

		private string _channelId;

		private string _description;

		private string _publishedAt;

		private System.Collections.Generic.IList<string> _tags;

		private VideoSnippet.ThumbnailsData _thumbnails;

		private string _title;

		/// <summary>Video category the video belongs to.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("categoryId")]
		public virtual string CategoryId {
			get {
				return this._categoryId;
			}
			set {
				this._categoryId = value;
			}
		}

		/// <summary>Channel publishing the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("channelId")]
		public virtual string ChannelId {
			get {
				return this._channelId;
			}
			set {
				this._channelId = value;
			}
		}

		/// <summary>Description of the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("description")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				this._description = value;
			}
		}

		/// <summary>Date and time the video was published at.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("publishedAt")]
		public virtual string PublishedAt {
			get {
				return this._publishedAt;
			}
			set {
				this._publishedAt = value;
			}
		}

		/// <summary>Textual tags associated with the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("tags")]
		public virtual System.Collections.Generic.IList<string> Tags {
			get {
				return this._tags;
			}
			set {
				this._tags = value;
			}
		}

		/// <summary>Video thumbnails.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("thumbnails")]
		public virtual VideoSnippet.ThumbnailsData Thumbnails {
			get {
				return this._thumbnails;
			}
			set {
				this._thumbnails = value;
			}
		}

		/// <summary>Title of the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("title")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				this._title = value;
			}
		}

		/// <summary>Video thumbnails.</summary>
		public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail>
		{
		}
	}

	/// <summary>Statistics about the video, such as the number of times the video was viewed or liked.</summary>
	public class VideoStatistics
	{

		private string _commentCount;

		private string _dislikeCount;

		private string _favoriteCount;

		private string _likeCount;

		private string _viewCount;

		/// <summary>Number of comments for this video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("commentCount")]
		public virtual string CommentCount {
			get {
				return this._commentCount;
			}
			set {
				this._commentCount = value;
			}
		}

		/// <summary>Number of times the video was disliked.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("dislikeCount")]
		public virtual string DislikeCount {
			get {
				return this._dislikeCount;
			}
			set {
				this._dislikeCount = value;
			}
		}

		/// <summary>Number of times the video was added to a user&apos;s favorites list.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("favoriteCount")]
		public virtual string FavoriteCount {
			get {
				return this._favoriteCount;
			}
			set {
				this._favoriteCount = value;
			}
		}

		/// <summary>Number of times the video was liked.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("likeCount")]
		public virtual string LikeCount {
			get {
				return this._likeCount;
			}
			set {
				this._likeCount = value;
			}
		}

		/// <summary>Number of times the video was viewed.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("viewCount")]
		public virtual string ViewCount {
			get {
				return this._viewCount;
			}
			set {
				this._viewCount = value;
			}
		}
	}

	/// <summary>The status of a video details the video&apos;s upload status and privacy status.</summary>
	public class VideoStatus
	{

		private string _failureReason;

		private string _privacyStatus;

		private string _rejectionReason;

		private string _uploadStatus;

		/// <summary>Present only if the uploadStatus indicates a failed upload.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("failureReason")]
		public virtual string FailureReason {
			get {
				return this._failureReason;
			}
			set {
				this._failureReason = value;
			}
		}

		/// <summary>Privacy of the video.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("privacyStatus")]
		public virtual string PrivacyStatus {
			get {
				return this._privacyStatus;
			}
			set {
				this._privacyStatus = value;
			}
		}

		/// <summary>Present only if the uploadStatus indicates a rejected upload.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("rejectionReason")]
		public virtual string RejectionReason {
			get {
				return this._rejectionReason;
			}
			set {
				this._rejectionReason = value;
			}
		}

		/// <summary>Status of the video upload.</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("uploadStatus")]
		public virtual string UploadStatus {
			get {
				return this._uploadStatus;
			}
			set {
				this._uploadStatus = value;
			}
		}
	}

	/// <summary>Freebase topic information related to the video.</summary>
	public class VideoTopicDetails
	{

		private System.Collections.Generic.IList<string> _topicIds;

		/// <summary>List of topic ids for this video *</summary>
		[Newtonsoft.Json.JsonPropertyAttribute ("topicIds")]
		public virtual System.Collections.Generic.IList<string> TopicIds {
			get {
				return this._topicIds;
			}
			set {
				this._topicIds = value;
			}
		}
	}
}